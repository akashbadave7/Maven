2017-10-26 12:06:30 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-10-26 12:06:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-10-26 12:06:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-10-26 12:06:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-10-26 12:06:30 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-10-26 12:06:30 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-10-26 12:06:30 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2017-10-26 12:06:30 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2017-10-26 12:06:30 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2017-10-26 12:06:30 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-10-26 12:06:31 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-10-26 12:06:31 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-10-26 12:06:31 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2017-10-26 12:06:31 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-10-26 12:06:31 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@70aad90e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@70aad90e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70aad90e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72c61ede
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1089d344
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4afc0daf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@748c8203
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@748c8203
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@748c8203
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@279ec6c2
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@279ec6c2
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@279ec6c2
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5be7c2a4
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5be7c2a4
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5be7c2a4
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@78802696
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@78802696
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@78802696
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3fcd6f0c
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3fcd6f0c
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3fcd6f0c
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@44d3eea6
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@44d3eea6
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44d3eea6
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@a8cbba3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@a8cbba3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a8cbba3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bd02bd1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bd02bd1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b9e6129
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b9e6129
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@4a48db63
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a48db63
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36c04de6
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7653543
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@223f07f3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@223f07f3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@35bced78
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@35bced78
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@12bf804e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@12bf804e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@143ab1ce
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@143ab1ce
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@204e0be1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@204e0be1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4638e1f1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4638e1f1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c6d9729
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c6d9729
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d88a5ea
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d88a5ea
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@29811268
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@29811268
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@78c27fbf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@78c27fbf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@12264a6b
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12264a6b
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c3ee408
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c3ee408
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c3ee408
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@284de1ca
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@701b329e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@701b329e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@701b329e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b8a9bac
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@13010f94
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13010f94
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@587c72fd
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@587c72fd
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b8f3638
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b8f3638
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@40ea3136
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40ea3136
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26696d10
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26696d10
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22b897da
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@700d37d5
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@700d37d5
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@700d37d5
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e556ecf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e556ecf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e556ecf
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2374012
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@14d37b44
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@7ea46e7a
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7ea46e7a
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@7ea46e7a
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ead7345
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ead7345
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ead7345
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@732105e4
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@e9d1291
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@54c65710
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54c65710
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74ea912
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@2af2dd9e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2af2dd9e
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@2fc0b27b
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fc0b27b
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2161842a
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11a0cec3
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@1b285888
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@12073849
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12073849
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12b2b9b1
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@395c0ede
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ffe23cc
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48693f9b
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f917816
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1662b5c4
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68fc1487
2017-10-26 12:06:31 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69686be4
2017-10-26 12:06:31 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-10-26 12:06:31 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/akash]
2017-10-26 12:06:31 INFO  pooling:132 - HHH10001001: Connection properties: {user=root, password=root}
2017-10-26 12:06:31 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-10-26 12:06:31 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2017-10-26 12:06:31 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-10-26 12:06:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.5.58-0ubuntu0.14.04.1
      major : 5
      minor : 5
2017-10-26 12:06:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-3.1.7 ( $Date: 2005/01/25 19:11:41 $, $Revision: 1.27.4.54 $ )
      major : 3
      minor : 1
2017-10-26 12:06:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 3.0
2017-10-26 12:06:31 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-10-26 12:06:31 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2017-10-26 12:06:31 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-10-26 12:06:31 INFO  LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-10-26 12:06:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-10-26 12:06:31 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-10-26 12:06:31 DEBUG AnnotationBinder:511 - Binding entity from annotated class: com.bridgeit.Model.UserDetails
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-10-26 12:06:31 DEBUG EntityBinder:419 - Import with entity name UserDetails
2017-10-26 12:06:31 DEBUG EntityBinder:695 - Bind entity com.bridgeit.Model.UserDetails on table registration
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registration), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-10-26 12:06:31 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
2017-10-26 12:06:31 DEBUG AbstractPropertyHolder:92 - Attempting to locate auto-apply AttributeConverter for property [com.bridgeit.Model.UserDetails:id]
2017-10-26 12:06:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2017-10-26 12:06:31 DEBUG PropertyBinder:265 - Building property id
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registration), mappingColumn=email, insertable=true, updatable=true, unique=false}
2017-10-26 12:06:31 DEBUG PropertyBinder:174 - MetadataSourceProcessor property email with lazy=false
2017-10-26 12:06:31 DEBUG AbstractPropertyHolder:92 - Attempting to locate auto-apply AttributeConverter for property [com.bridgeit.Model.UserDetails:email]
2017-10-26 12:06:31 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2017-10-26 12:06:31 DEBUG PropertyBinder:265 - Building property email
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registration), mappingColumn=mobilenumber, insertable=true, updatable=true, unique=false}
2017-10-26 12:06:31 DEBUG PropertyBinder:174 - MetadataSourceProcessor property mobilenumber with lazy=false
2017-10-26 12:06:31 DEBUG AbstractPropertyHolder:92 - Attempting to locate auto-apply AttributeConverter for property [com.bridgeit.Model.UserDetails:mobilenumber]
2017-10-26 12:06:31 DEBUG SimpleValueBinder:411 - building SimpleValue for mobilenumber
2017-10-26 12:06:31 DEBUG PropertyBinder:265 - Building property mobilenumber
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registration), mappingColumn=name, insertable=true, updatable=true, unique=false}
2017-10-26 12:06:31 DEBUG PropertyBinder:174 - MetadataSourceProcessor property name with lazy=false
2017-10-26 12:06:31 DEBUG AbstractPropertyHolder:92 - Attempting to locate auto-apply AttributeConverter for property [com.bridgeit.Model.UserDetails:name]
2017-10-26 12:06:31 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2017-10-26 12:06:31 DEBUG PropertyBinder:265 - Building property name
2017-10-26 12:06:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registration), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-10-26 12:06:31 DEBUG PropertyBinder:174 - MetadataSourceProcessor property password with lazy=false
2017-10-26 12:06:31 DEBUG AbstractPropertyHolder:92 - Attempting to locate auto-apply AttributeConverter for property [com.bridgeit.Model.UserDetails:password]
2017-10-26 12:06:31 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2017-10-26 12:06:31 DEBUG PropertyBinder:265 - Building property password
2017-10-26 12:06:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2017-10-26 12:06:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2017-10-26 12:06:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for mobilenumber
2017-10-26 12:06:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2017-10-26 12:06:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2017-10-26 12:06:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [registration]
2017-10-26 12:06:31 DEBUG SessionFactoryImpl:199 - Building session factory
2017-10-26 12:06:31 DEBUG Settings:69 - SessionFactory name : null
2017-10-26 12:06:31 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
2017-10-26 12:06:31 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
2017-10-26 12:06:31 DEBUG Settings:73 - Statistics: disabled
2017-10-26 12:06:31 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
2017-10-26 12:06:31 DEBUG Settings:76 - Default entity-mode: pojo
2017-10-26 12:06:31 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-10-26 12:06:31 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
2017-10-26 12:06:31 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
2017-10-26 12:06:31 DEBUG Settings:81 - Default batch fetch size: -1
2017-10-26 12:06:31 DEBUG Settings:82 - Maximum outer join fetch depth: 2
2017-10-26 12:06:31 DEBUG Settings:83 - Default null ordering: NONE
2017-10-26 12:06:31 DEBUG Settings:84 - Order SQL updates by primary key: disabled
2017-10-26 12:06:31 DEBUG Settings:85 - Order SQL inserts for batching: disabled
2017-10-26 12:06:31 DEBUG Settings:87 - multi-tenancy strategy : NONE
2017-10-26 12:06:31 DEBUG Settings:89 - JTA Track by Thread: enabled
2017-10-26 12:06:31 DEBUG Settings:91 - Query language substitutions: {}
2017-10-26 12:06:31 DEBUG Settings:92 - JPA query language strict compliance: disabled
2017-10-26 12:06:31 DEBUG Settings:93 - Named query checking : enabled
2017-10-26 12:06:31 DEBUG Settings:95 - Second-level cache: enabled
2017-10-26 12:06:31 DEBUG Settings:96 - Second-level query cache: disabled
2017-10-26 12:06:31 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@642d6a14
2017-10-26 12:06:31 DEBUG Settings:98 - Second-level cache region prefix: null
2017-10-26 12:06:31 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2017-10-26 12:06:31 DEBUG Settings:100 - Structured second-level cache entries: disabled
2017-10-26 12:06:31 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2017-10-26 12:06:31 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2017-10-26 12:06:31 DEBUG Settings:104 - JDBC batch size: 15
2017-10-26 12:06:31 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2017-10-26 12:06:31 DEBUG Settings:106 - Scrollable result sets: enabled
2017-10-26 12:06:31 DEBUG Settings:107 - Wrap result sets: disabled
2017-10-26 12:06:31 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2017-10-26 12:06:31 DEBUG Settings:109 - JDBC result set fetch size: null
2017-10-26 12:06:31 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2017-10-26 12:06:31 DEBUG Settings:111 - Generate SQL with comments: disabled
2017-10-26 12:06:31 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
2017-10-26 12:06:31 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/bridgeit/Downloads/apache-tomcat-8.0.47/bin/bootstrap.jar:/home/bridgeit/Downloads/apache-tomcat-8.0.47/bin/tomcat-juli.jar:/home/bridgeit/Documents/eclipse/lib/tools.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/home/bridgeit/Documents/eclipse/jre/lib/amd64, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=/home/bridgeit, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=/home/bridgeit/Documents/eclipse/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., sun.boot.class.path=/home/bridgeit/Documents/eclipse/jre/lib/resources.jar:/home/bridgeit/Documents/eclipse/jre/lib/rt.jar:/home/bridgeit/Documents/eclipse/jre/lib/sunrsasign.jar:/home/bridgeit/Documents/eclipse/jre/lib/jsse.jar:/home/bridgeit/Documents/eclipse/jre/lib/jce.jar:/home/bridgeit/Documents/eclipse/jre/lib/charsets.jar:/home/bridgeit/Documents/eclipse/jre/lib/jfr.jar:/home/bridgeit/Documents/eclipse/jre/classes, hibernate.hbm2ddl.auto=update, server.loader=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_121-b13, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=bridgeit, path.separator=:, hibernate.connection.username=root, common.loader="/home/bridgeit/Maven/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib","/home/bridgeit/Maven/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib/*.jar","/home/bridgeit/Downloads/apache-tomcat-8.0.47/lib","/home/bridgeit/Downloads/apache-tomcat-8.0.47/lib/*.jar", os.version=4.4.0-97-generic, java.endorsed.dirs=/home/bridgeit/Downloads/apache-tomcat-8.0.47/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/akash, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-web*.jar,log4j-taglib*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=/home/bridgeit/Downloads/apache-tomcat-8.0.47, java.version=1.8.0_121, java.util.concurrent.ForkJoinPool.common.threadFactory=org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-storeconfig.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-util-scan.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-websocket.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, user.dir=/home/bridgeit/Documents/eclipse, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=/home/bridgeit/Maven/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ad07e95, wtp.deploy=/home/bridgeit/Maven/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.121-b13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=/home/bridgeit/Documents/eclipse/jre/lib/ext:/usr/java/packages/lib/ext, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/akash, java.class.version=52.0}
2017-10-26 12:06:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2017-10-26 12:06:31 DEBUG SessionFactoryImpl:294 - Instantiated session factory
2017-10-26 12:06:32 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.bridgeit.Model.UserDetails] is safe
2017-10-26 12:06:32 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bridgeit.Model.UserDetails
2017-10-26 12:06:32 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.bridgeit.Model.UserDetails] is safe
2017-10-26 12:06:32 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bridgeit.Model.UserDetails
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:3598 - Static SQL for entity: com.bridgeit.Model.UserDetails
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:3603 -  Version select: select id from registration where id =?
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:3606 -  Snapshot select: select userdetail_.id, userdetail_.email as email2_0_, userdetail_.mobilenumber as mobilenu3_0_, userdetail_.name as name4_0_, userdetail_.password as password5_0_ from registration userdetail_ where userdetail_.id=?
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into registration (email, mobilenumber, name, password, id) values (?, ?, ?, ?, ?)
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:394 -  Update 0: update registration set email=?, mobilenumber=?, name=?, password=? where id=?
2017-10-26 12:06:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from registration where id=?
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b06ec1]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [NONE]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bb3d42f]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [READ]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6f4e3a]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [UPGRADE]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59e5ad38]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [UPGRADE_NOWAIT]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57516a00]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [UPGRADE_SKIPLOCKED]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f76b1fb]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [FORCE]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d18fc22]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [PESSIMISTIC_READ]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? lock in share mode
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e62faef]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [PESSIMISTIC_WRITE]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6962337a]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [PESSIMISTIC_FORCE_INCREMENT]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=? for update
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fa771f7]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [OPTIMISTIC]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dab0bc3]
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : email
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : mobilenumber
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
2017-10-26 12:06:32 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : password
2017-10-26 12:06:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-10-26 12:06:32 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-10-26 12:06:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.bridgeit.Model.UserDetails)
    - Returns
       - EntityReturnImpl(entity=com.bridgeit.Model.UserDetails, querySpaceUid=<gen:0>, path=com.bridgeit.Model.UserDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bridgeit.Model.UserDetails)
          - SQL table alias mapping - userdetail0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-26 12:06:32 DEBUG EntityLoader:115 - Static select for entity com.bridgeit.Model.UserDetails [OPTIMISTIC_FORCE_INCREMENT]: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.bridgeit.Model.UserDetails: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.bridgeit.Model.UserDetails: select userdetail0_.id as id1_0_0_, userdetail0_.email as email2_0_0_, userdetail0_.mobilenumber as mobilenu3_0_0_, userdetail0_.name as name4_0_0_, userdetail0_.password as password5_0_0_ from registration userdetail0_ where userdetail0_.id=?
2017-10-26 12:06:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5900c5f6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2017-10-26 12:06:32 DEBUG Table:514 - No alter strings for table : hibernate_sequence
2017-10-26 12:06:32 DEBUG Table:514 - No alter strings for table : registration
2017-10-26 12:06:32 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
2017-10-26 12:06:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-10-26 12:06:32 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-10-26 12:06:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2017-10-26 12:06:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2017-10-26 12:06:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@30d1541b
2017-10-26 12:06:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c035c4a2-e3a1-4d81-9c9f-58dfb521b1f6 (<unnamed>)
2017-10-26 12:06:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-10-26 12:06:32 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
2017-10-26 12:06:32 DEBUG TransactionImpl:55 - begin
2017-10-26 12:06:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1cbcb20
2017-10-26 12:06:32 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-10-26 12:06:32 DEBUG QueryTranslatorImpl:282 - parse() - HQL: from com.bridgeit.Model.UserDetails where email='akash.badave7@gmail.com' or mobilenumber='8147901147'
2017-10-26 12:06:32 DEBUG QueryTranslatorImpl:300 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'bridgeit'
    |           |  \-[IDENT] Node: 'Model'
    |           \-[IDENT] Node: 'UserDetails'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[QUOTED_STRING] Node: ''akash.badave7@gmail.com''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'mobilenumber'
             \-[QUOTED_STRING] Node: ''8147901147''

2017-10-26 12:06:32 DEBUG ErrorCounter:95 - throwQueryException() : no errors
2017-10-26 12:06:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2017-10-26 12:06:32 DEBUG FromElement:147 - FromClause{level=1} : com.bridgeit.Model.UserDetails (<no alias>) -> userdetail0_
2017-10-26 12:06:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-10-26 12:06:32 DEBUG DotNode:666 - getDataType() : email -> org.hibernate.type.StringType@4a48db63
2017-10-26 12:06:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.email -> userdetail0_.email
2017-10-26 12:06:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-10-26 12:06:32 DEBUG DotNode:666 - getDataType() : mobilenumber -> org.hibernate.type.StringType@4a48db63
2017-10-26 12:06:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.mobilenumber -> userdetail0_.mobilenumber
2017-10-26 12:06:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2017-10-26 12:06:32 DEBUG HqlSqlWalker:745 - processQuery() :  ( SELECT ( FromClause{level=1} registration userdetail0_ ) ( where ( or ( = ( userdetail0_.email {synthetic-alias} email ) 'akash.badave7@gmail.com' ) ( = ( userdetail0_.mobilenumber {synthetic-alias} mobilenumber ) '8147901147' ) ) ) )
2017-10-26 12:06:32 DEBUG HqlSqlWalker:1021 - Derived SELECT clause created.
2017-10-26 12:06:32 DEBUG JoinProcessor:187 - Using FROM fragment [registration userdetail0_]
2017-10-26 12:06:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2017-10-26 12:06:32 DEBUG QueryTranslatorImpl:269 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registration)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'userdetail0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registration,tableAlias=userdetail0_,origin=null,columns={,className=com.bridgeit.Model.UserDetails}}}
    |  \-[SQL_TOKEN] SqlFragment: 'userdetail0_.email as email2_0_, userdetail0_.mobilenumber as mobilenu3_0_, userdetail0_.name as name4_0_, userdetail0_.password as password5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[userdetail0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registration userdetail0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registration,tableAlias=userdetail0_,origin=null,columns={,className=com.bridgeit.Model.UserDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'userdetail0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path={synthetic-alias}.email,tableAlias=userdetail0_,className=com.bridgeit.Model.UserDetails,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[QUOTED_STRING] LiteralNode: ''akash.badave7@gmail.com''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'userdetail0_.mobilenumber' {propertyName=mobilenumber,dereferenceType=PRIMITIVE,getPropertyPath=mobilenumber,path={synthetic-alias}.mobilenumber,tableAlias=userdetail0_,className=com.bridgeit.Model.UserDetails,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'mobilenumber' {originalText=mobilenumber}
             \-[QUOTED_STRING] LiteralNode: ''8147901147''

2017-10-26 12:06:32 DEBUG ErrorCounter:95 - throwQueryException() : no errors
2017-10-26 12:06:32 DEBUG QueryTranslatorImpl:251 - HQL: from com.bridgeit.Model.UserDetails where email='akash.badave7@gmail.com' or mobilenumber='8147901147'
2017-10-26 12:06:32 DEBUG QueryTranslatorImpl:252 - SQL: select userdetail0_.id as id1_0_, userdetail0_.email as email2_0_, userdetail0_.mobilenumber as mobilenu3_0_, userdetail0_.name as name4_0_, userdetail0_.password as password5_0_ from registration userdetail0_ where userdetail0_.email='akash.badave7@gmail.com' or userdetail0_.mobilenumber='8147901147'
2017-10-26 12:06:32 DEBUG ErrorCounter:95 - throwQueryException() : no errors
2017-10-26 12:06:32 DEBUG SQL:92 - select userdetail0_.id as id1_0_, userdetail0_.email as email2_0_, userdetail0_.mobilenumber as mobilenu3_0_, userdetail0_.name as name4_0_, userdetail0_.password as password5_0_ from registration userdetail0_ where userdetail0_.email='akash.badave7@gmail.com' or userdetail0_.mobilenumber='8147901147'
2017-10-26 12:06:32 DEBUG SQL:92 - select next_val as id_val from hibernate_sequence for update
2017-10-26 12:06:32 DEBUG SQL:92 - update hibernate_sequence set next_val= ? where next_val=?
2017-10-26 12:06:32 DEBUG AbstractSaveEventListener:118 - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2017-10-26 12:06:32 DEBUG TransactionImpl:66 - committing
2017-10-26 12:06:32 DEBUG AbstractFlushingEventListener:132 - Processing flush-time cascades
2017-10-26 12:06:32 DEBUG AbstractFlushingEventListener:174 - Dirty checking collections
2017-10-26 12:06:32 DEBUG AbstractFlushingEventListener:106 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2017-10-26 12:06:32 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-26 12:06:32 DEBUG EntityPrinter:102 - Listing entities:
2017-10-26 12:06:32 DEBUG EntityPrinter:109 - com.bridgeit.Model.UserDetails{password=akash123, mobilenumber=8147901147, name=Akash Badave, id=6, email=akash.badave7@gmail.com}
2017-10-26 12:06:32 DEBUG SQL:92 - insert into registration (email, mobilenumber, name, password, id) values (?, ?, ?, ?, ?)
2017-10-26 12:06:32 DEBUG LogicalConnectionManagedImpl:170 - Initiating JDBC connection release from afterTransaction
2017-10-26 12:06:32 DEBUG LogicalConnectionManagedImpl:170 - Initiating JDBC connection release from afterTransaction
2017-10-26 12:06:32 INFO  SignUpController:52 - Signup successfull
2017-10-26 12:07:01 DEBUG DriverManagerConnectionProviderImpl:51 - Connection pool now considered primed; min-size will be maintained
2017-10-26 12:13:02 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-10-26 12:13:02 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-10-26 12:13:02 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2017-10-26 12:13:02 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-10-26 12:13:03 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-10-26 12:13:03 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/akash]
2017-10-26 12:13:03 INFO  pooling:135 - HHH10001001: Connection properties: {user=root, password=****}
2017-10-26 12:13:03 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-10-26 12:13:03 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-10-26 12:13:03 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-10-26 12:13:03 INFO  LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-10-26 12:13:03 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62285563] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2017-10-26 12:13:03 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-10-26 12:13:03 INFO  LoginController:46 - Login Successfull
2017-10-26 12:13:08 INFO  LogoutController:32 - Successfully logout
2017-10-26 12:13:33 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2017-10-26 12:13:33 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-10-26 12:13:33 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/akash]
2017-10-26 12:13:33 INFO  pooling:135 - HHH10001001: Connection properties: {user=root, password=****}
2017-10-26 12:13:33 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-10-26 12:13:33 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-10-26 12:13:33 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-10-26 12:13:33 INFO  LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-10-26 12:13:33 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5754b284] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2017-10-26 12:13:33 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-10-26 12:13:33 INFO  LoginController:46 - Login Successfull
2017-10-26 12:13:34 INFO  LogoutController:32 - Successfully logout
